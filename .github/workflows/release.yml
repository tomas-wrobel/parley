name: Create a release

on:
  push:
    branches: ["main"]

  workflow_dispatch:
  
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
      - name: Get current package version
        id: package
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: Install languages
        run: npm install
      - name: Compile dialog.js
        run: npm run build
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Publish to GitHub
        run: gh release create v${{steps.package.outputs.current-version}} dist/*
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
      - name: Install doc generators
        run: npm install --global @microsoft/api-extractor @microsoft/api-documenter typescript
      - name: Generate lib file
        run: tsc --declaration --emitDeclarationOnly --declarationDir lib
      - name: Generate docs
        run: api-extractor init && api-extractor run && api-documenter markdown -o ./docs
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
